{"ast":null,"code":"var _jsxFileName = \"/home/jh/Desktop/Full-stack/osa1/unicafe/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Statistics = props => {\n  let positive,\n    average = 0;\n  let all = props.data[0] + props.data[1] + props.data[2];\n  if (props.data[1] == 0 && props.data[2] == 0) {\n    positive = props.data[0];\n    average = props.data[0];\n  } else {\n    positive = props.data[0] / (props.data[0] + props.data[1] + props.data[2]) * 100;\n    average = (props.data[0] - props.data[2]) / (props.data[0] + props.data[1] + props.data[2]);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Statisticline, {\n      text: \"good\",\n      value: props.data[0]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Statisticline, {\n      text: \"neutral\",\n      value: props.data[1]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Statisticline, {\n      text: \"bad\",\n      value: props.data[2]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Statisticline, {\n      text: \"all\",\n      value: all\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Statisticline, {\n      text: \"average\",\n      value: average.toFixed(1)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Statisticline, {\n      text: \"positive %\",\n      value: positive.toFixed(1)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_c = Statistics;\nconst Button = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: props.func_one,\n      children: props.text_one\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: props.func_two,\n      children: props.text_two\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: props.func_three,\n      children: props.text_three\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_c2 = Button;\nconst Display = props => {\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: props.header\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_c3 = Display;\nconst Statisticline = props => {\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: props.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: props.value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 7\n  }, this);\n};\n_c4 = Statisticline;\nconst App = () => {\n  _s();\n  const headers = [\"give feedback\", \"statistics\", \"No feedback given\"];\n  const [good = 0, setGood] = useState(0);\n  const [neutral = 0, setNeutral] = useState(0);\n  const [bad = 0, setBad] = useState(0);\n  const good_add = () => setGood(good + 1);\n  const neutral_add = () => setNeutral(neutral + 1);\n  const bad_add = () => setBad(bad + 1);\n  if (good == 0 && neutral == 0 && bad == 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Display, {\n        header: headers[0]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        func_one: good_add,\n        text_one: \"good\",\n        func_two: neutral_add,\n        text_two: \"neutral\",\n        func_three: bad_add,\n        text_three: \"bad\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Display, {\n        header: headers[1]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: headers[2]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Display, {\n        header: headers[0]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        func_one: good_add,\n        text_one: \"good\",\n        func_two: neutral_add,\n        text_two: \"neutral\",\n        func_three: bad_add,\n        text_three: \"bad\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Display, {\n        header: headers[1]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n        data: [good, neutral, bad]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this);\n  }\n};\n_s(App, \"26gQtKqUX8GfokmzQBfKkXQKKkg=\");\n_c5 = App;\nexport default App;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"Statistics\");\n$RefreshReg$(_c2, \"Button\");\n$RefreshReg$(_c3, \"Display\");\n$RefreshReg$(_c4, \"Statisticline\");\n$RefreshReg$(_c5, \"App\");","map":{"version":3,"names":["React","useState","Statistics","props","positive","average","all","data","toFixed","Button","func_one","text_one","func_two","text_two","func_three","text_three","Display","header","Statisticline","text","value","App","headers","good","setGood","neutral","setNeutral","bad","setBad","good_add","neutral_add","bad_add"],"sources":["/home/jh/Desktop/Full-stack/osa1/unicafe/src/App.js"],"sourcesContent":["import React, { useState } from 'react'\n\nconst Statistics = (props) => {\n  let positive, average = 0; \n  let all = props.data[0] + props.data[1] + props.data[2]\n  if (props.data[1] == 0 && props.data[2] == 0) {\n    positive = props.data[0] \n    average = props.data[0]\n  } else {\n    positive = (props.data[0] / (props.data[0] + props.data[1] + props.data[2])) * 100\n    average =  (props.data[0] - props.data[2]) / (props.data[0] + props.data[1] + props.data[2])\n  }\n\n  return(\n    <div>\n      <Statisticline text=\"good\" value={props.data[0]}/>\n      <Statisticline text=\"neutral\" value={props.data[1]}/>\n      <Statisticline text=\"bad\" value={props.data[2]}/>\n      <Statisticline text=\"all\" value={all}/>\n      <Statisticline text=\"average\" value={average.toFixed(1)}/>\n      <Statisticline text=\"positive %\" value={positive.toFixed(1)}/>\n    </div>\n  )\n}\n\nconst Button = (props) => {\n  return(\n    <div>\n      <button onClick={props.func_one}>{props.text_one}</button>\n      <button onClick={props.func_two}>{props.text_two}</button>\n      <button onClick={props.func_three}>{props.text_three}</button>\n    </div>\n  )\n\n}\n\nconst Display = (props) => {\n  return(\n    <h1>{props.header}</h1>\n  )\n}\n\nconst Statisticline = (props) => {\n  return (\n      <table>\n        <tbody>\n          <tr>\n            <td>{props.text}</td>\n            <td>{props.value}</td>\n          </tr>\n        </tbody>\n      </table>\n  )\n}\n\nconst App = () => {\n  const headers = [\"give feedback\", \"statistics\", \"No feedback given\"]\n\n  const [good = 0, setGood] = useState(0)\n  const [neutral = 0, setNeutral] = useState(0)\n  const [bad = 0, setBad] = useState(0)\n\n  const good_add = () => setGood(good + 1)\n  const neutral_add = () => setNeutral(neutral + 1)\n  const bad_add = () => setBad(bad + 1)\n\n  if (good == 0 && neutral == 0 && bad == 0) {\n    return (\n      <div>\n        <Display header={headers[0]}/>\n        <Button\n          func_one={good_add} text_one={\"good\"}\n          func_two={neutral_add} text_two={\"neutral\"}\n          func_three={bad_add} text_three={\"bad\"}\n        />\n        <Display header={headers[1]}/>\n        <p>{headers[2]}</p>\n      </div>\n    )\n  } else {\n    return (\n      <div>\n        <Display header={headers[0]}/>\n        <Button\n          func_one={good_add} text_one={\"good\"}\n          func_two={neutral_add} text_two={\"neutral\"}\n          func_three={bad_add} text_three={\"bad\"}\n        />\n        <Display header={headers[1]}/>\n        <Statistics data={[good, neutral, bad]}/>\n      </div>\n    )\n  }\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}