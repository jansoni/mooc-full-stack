{"ast":null,"code":"var _jsxFileName = \"/home/jh/Desktop/Full-stack/osa1/unicafe/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Statistics = props => {};\n_c = Statistics;\nconst Button = props => {};\n_c2 = Button;\nconst Display = props => {\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: props.header\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n_c3 = Display;\nconst Statisticline = props => {};\n_c4 = Statisticline;\nconst App = () => {\n  _s();\n  const headers = [\"give feedback\", \"statistics\", \"No feedback given\"];\n  const [good = 0, setGood] = useState(0);\n  const [neutral = 0, setNeutral] = useState(0);\n  const [bad = 0, setBad] = useState(0);\n  const good_add = () => setGood(good + 1);\n  const neutral_add = () => setNeutral(neutral + 1);\n  const bad_add = () => setBad(bad + 1);\n  if (good == 0 && neutral == 0 && bad == 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Display, {\n        header: headers[0]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Display, {\n        header: headers[1]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: headers[2]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Display, {\n        header: headers[0]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Display, {\n        header: headers[1]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this);\n  }\n};\n_s(App, \"26gQtKqUX8GfokmzQBfKkXQKKkg=\");\n_c5 = App;\nexport default App;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"Statistics\");\n$RefreshReg$(_c2, \"Button\");\n$RefreshReg$(_c3, \"Display\");\n$RefreshReg$(_c4, \"Statisticline\");\n$RefreshReg$(_c5, \"App\");","map":{"version":3,"names":["useState","Statistics","props","Button","Display","header","Statisticline","App","headers","good","setGood","neutral","setNeutral","bad","setBad","good_add","neutral_add","bad_add"],"sources":["/home/jh/Desktop/Full-stack/osa1/unicafe/src/App.js"],"sourcesContent":["import { useState } from 'react'\n\nconst Statistics = (props) => {\n\n}\n\nconst Button = (props) => {\n\n}\n\nconst Display = (props) => {\n  return(\n    <h1>{props.header}</h1>\n  )\n}\n\nconst Statisticline = (props) => {\n\n}\n\nconst App = () => {\n  const headers = [\"give feedback\", \"statistics\", \"No feedback given\"]\n\n  const [good = 0, setGood] = useState(0)\n  const [neutral = 0, setNeutral] = useState(0)\n  const [bad = 0, setBad] = useState(0)\n\n  const good_add = () => setGood(good + 1)\n  const neutral_add = () => setNeutral(neutral + 1)\n  const bad_add = () => setBad(bad + 1)\n\n  if (good == 0 && neutral == 0 && bad == 0) {\n    return (\n      <div>\n        <Display header={headers[0]}/>\n        <Display header={headers[1]}/>\n        <p>{headers[2]}</p>\n      </div>\n    )\n  } else {\n    return (\n      <div>\n        <Display header={headers[0]}/>\n        <Display header={headers[1]}/>\n      </div>\n    )\n  }\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAA;AAEhC,MAAMC,UAAU,GAAIC,KAAK,IAAK,CAE9B,CAAC;AAAA,KAFKD,UAAU;AAIhB,MAAME,MAAM,GAAID,KAAK,IAAK,CAE1B,CAAC;AAAA,MAFKC,MAAM;AAIZ,MAAMC,OAAO,GAAIF,KAAK,IAAK;EACzB,oBACE;IAAA,UAAKA,KAAK,CAACG;EAAM;IAAA;IAAA;IAAA;EAAA,QAAM;AAE3B,CAAC;AAAA,MAJKD,OAAO;AAMb,MAAME,aAAa,GAAIJ,KAAK,IAAK,CAEjC,CAAC;AAAA,MAFKI,aAAa;AAInB,MAAMC,GAAG,GAAG,MAAM;EAAA;EAChB,MAAMC,OAAO,GAAG,CAAC,eAAe,EAAE,YAAY,EAAE,mBAAmB,CAAC;EAEpE,MAAM,CAACC,IAAI,GAAG,CAAC,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;EACvC,MAAM,CAACW,OAAO,GAAG,CAAC,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC;EAC7C,MAAM,CAACa,GAAG,GAAG,CAAC,EAAEC,MAAM,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC;EAErC,MAAMe,QAAQ,GAAG,MAAML,OAAO,CAACD,IAAI,GAAG,CAAC,CAAC;EACxC,MAAMO,WAAW,GAAG,MAAMJ,UAAU,CAACD,OAAO,GAAG,CAAC,CAAC;EACjD,MAAMM,OAAO,GAAG,MAAMH,MAAM,CAACD,GAAG,GAAG,CAAC,CAAC;EAErC,IAAIJ,IAAI,IAAI,CAAC,IAAIE,OAAO,IAAI,CAAC,IAAIE,GAAG,IAAI,CAAC,EAAE;IACzC,oBACE;MAAA,wBACE,QAAC,OAAO;QAAC,MAAM,EAAEL,OAAO,CAAC,CAAC;MAAE;QAAA;QAAA;QAAA;MAAA,QAAE,eAC9B,QAAC,OAAO;QAAC,MAAM,EAAEA,OAAO,CAAC,CAAC;MAAE;QAAA;QAAA;QAAA;MAAA,QAAE,eAC9B;QAAA,UAAIA,OAAO,CAAC,CAAC;MAAC;QAAA;QAAA;QAAA;MAAA,QAAK;IAAA;MAAA;MAAA;MAAA;IAAA,QACf;EAEV,CAAC,MAAM;IACL,oBACE;MAAA,wBACE,QAAC,OAAO;QAAC,MAAM,EAAEA,OAAO,CAAC,CAAC;MAAE;QAAA;QAAA;QAAA;MAAA,QAAE,eAC9B,QAAC,OAAO;QAAC,MAAM,EAAEA,OAAO,CAAC,CAAC;MAAE;QAAA;QAAA;QAAA;MAAA,QAAE;IAAA;MAAA;MAAA;MAAA;IAAA,QAC1B;EAEV;AACF,CAAC;AAAA,GA3BKD,GAAG;AAAA,MAAHA,GAAG;AA6BT,eAAeA,GAAG;AAAC;AAAA;AAAA;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}